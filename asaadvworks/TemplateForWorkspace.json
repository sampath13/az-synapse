{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "asaadvworks"
		},
		"AsaSqlAdvWorksLinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AsaSqlAdvWorksLinkedService'"
		},
		"AzureFunction1_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunction1'"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"asaadvworks-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'asaadvworks-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:asaadvworks.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"AsaSqlAdvWorksLinkedService_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "asaadvworks-ondemand.sql.azuresynapse.net"
		},
		"AsaSqlAdvWorksLinkedService_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AsaSqlAdvWorks"
		},
		"AsaSqlAdvWorksLinkedService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		},
		"AzureFunction1_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://functionapp-240806161449.azurewebsites.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sampath-seql.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorksDW"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		},
		"asaadvworks-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://asastoragegen2.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SetTimestamp",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "timestamp",
							"value": {
								"value": "@utcnow('yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyDataToCsv",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SetTimestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT Title, COUNT(1) AS [Count] FROM Customers GROUP BY Title ORDER BY COUNT(1) DESC;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AsaCustomersTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CustomersAggregateCsv",
								"type": "DatasetReference",
								"parameters": {
									"timestamp": {
										"value": "@variables('timestamp')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"timestamp": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-06T10:26:08Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/AsaCustomersTable')]",
				"[concat(variables('workspaceId'), '/datasets/CustomersAggregateCsv')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PipelineCopyCustomersData')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CopyCustomersDataActivity",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CustomerID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "NameStyle",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NameStyle",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Suffix",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Suffix",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SalesPerson",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesPerson",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "PasswordHash",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PasswordHash",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "PasswordSalt",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PasswordSalt",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MSSqlCustomers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLSCustomersParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "InvokeHttpTrigger1_copy1",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "CopyDataToCsv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "HttpTrigger1",
							"body": {
								"key": "value"
							},
							"headers": {},
							"method": "POST"
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyDataToCsv",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SetTimestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT Title, COUNT(1) AS [Count] FROM Customers GROUP BY Title ORDER BY COUNT(1) DESC;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AsaCustomersTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CustomersAggregateCsv",
								"type": "DatasetReference",
								"parameters": {
									"timestamp": {
										"value": "@variables('timestamp')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SetTimestamp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "CopyCustomersDataActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "timestamp",
							"value": {
								"value": "@utcnow('yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"timestamp": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-06T10:31:20Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/MSSqlCustomers')]",
				"[concat(variables('workspaceId'), '/datasets/ADLSCustomersParquet')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureFunction1')]",
				"[concat(variables('workspaceId'), '/datasets/AsaCustomersTable')]",
				"[concat(variables('workspaceId'), '/datasets/CustomersAggregateCsv')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADLSCustomersParquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asaadvworks-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Customers.parquet",
						"folderPath": "advworks",
						"fileSystem": "data"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asaadvworks-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AsaCustomersTable')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AsaSqlAdvWorksLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "MiddleName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "varchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customers"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AsaSqlAdvWorksLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlCustomerAggregation')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AsaSqlAdvWorksLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "Count",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomersAggregation"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AsaSqlAdvWorksLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CustomersAggregateCsv')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asaadvworks-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"timestamp": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "report-@{dataset().timestamp}.csv",
							"type": "Expression"
						},
						"folderPath": "customers",
						"fileSystem": "reports"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "Count",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asaadvworks-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MSSqlCustomers')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AsaSqlAdvWorksLinkedService')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AsaSqlAdvWorksLinkedService_properties_typeProperties_server')]",
					"database": "[parameters('AsaSqlAdvWorksLinkedService_properties_typeProperties_database')]",
					"encrypt": "True",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AsaSqlAdvWorksLinkedService_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AsaSqlAdvWorksLinkedService_password')]"
					},
					"multipleActiveResultSets": "False"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureFunction1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction1_properties_typeProperties_functionAppUrl')]",
					"authentication": "Anonymous",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction1_functionKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asaadvworks-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('asaadvworks-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asaadvworks-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('asaadvworks-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'PA55W0rD@2024';\n\n-- CREATE DATABASE SCOPED CREDENTIAL [WorkspaceIdentity] WITH IDENTITY = 'Managed Identity';\n-- GO\n\n/*\nCREATE EXTERNAL FILE FORMAT [ParquetFF] WITH (\n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n);\nGO\n\nCREATE EXTERNAL DATA SOURCE [SynapseSqlReadable] WITH (\n    LOCATION = 'https://asastoragegen2.blob.core.windows.net/',\n    CREDENTIAL = [WorkspaceIdentity]\n);\nGO\n\n\nCREATE EXTERNAL TABLE [Customers]\n(\n    [CustomerID] [int] NULL,\n\t[NameStyle] bit NULL,\n\t[Title] [nvarchar](8) NULL,\n\t[FirstName] [varchar](100) NULL,\n\t[MiddleName] [varchar](100) NULL,\n\t[LastName] [varchar](100) NULL,\n\t[Suffix] [nvarchar](10) NULL,\n\t[CompanyName] [nvarchar](128) NULL,\n\t[SalesPerson] [nvarchar](256) NULL,\n\t[EmailAddress] [nvarchar](50) NULL,\n\t[Phone] [varchar](50) NULL,\n\t[PasswordHash] [varchar](128) NULL,\n\t[PasswordSalt] [varchar](10) NULL,\n\t[rowguid] [uniqueidentifier] NULL,\n\t[ModifiedDate] [datetime] NULL\n)  \nWITH (\n    LOCATION = '/data/advworks/**',\n    DATA_SOURCE = SynapseSqlReadable,  \n    FILE_FORMAT = ParquetFF\n)\nGO\n\n\nCREATE EXTERNAL FILE FORMAT CsvFF\nWITH (\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS (\n        FIELD_TERMINATOR = ','\n        )\n);\n\n\nCREATE EXTERNAL TABLE [CustomersAggregation]\nWITH (\n    LOCATION = '/reports/customers/',\n    DATA_SOURCE = SynapseSqlReadable,\n    FILE_FORMAT = CsvFF\n)\nAS \nSELECT Title, COUNT(1) AS [Count] FROM Customers GROUP BY Title ORDER BY COUNT(1) DESC;\n\n\nDROP EXTERNAL TABLE CustomersAggregation;\nDROP EXTERNAL TABLE Customers;\n\n*/\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "AsaSqlAdvWorks",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'PA55W0rD@2024';\n\n-- CREATE DATABASE SCOPED CREDENTIAL [WorkspaceIdentity] WITH IDENTITY = 'Managed Identity';\n-- GO\n\n/*\nCREATE EXTERNAL FILE FORMAT [ParquetFF] WITH (\n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n);\nGO\n\nCREATE EXTERNAL DATA SOURCE [SynapseSqlReadable] WITH (\n    LOCATION = 'https://asastoragegen2.blob.core.windows.net/',\n    CREDENTIAL = [WorkspaceIdentity]\n);\nGO\n\n\nCREATE EXTERNAL TABLE [Customers]\n(\n    [CustomerID] [int] NULL,\n\t[NameStyle] bit NULL,\n\t[Title] [nvarchar](8) NULL,\n\t[FirstName] [varchar](100) NULL,\n\t[MiddleName] [varchar](100) NULL,\n\t[LastName] [varchar](100) NULL,\n\t[Suffix] [nvarchar](10) NULL,\n\t[CompanyName] [nvarchar](128) NULL,\n\t[SalesPerson] [nvarchar](256) NULL,\n\t[EmailAddress] [nvarchar](50) NULL,\n\t[Phone] [varchar](50) NULL,\n\t[PasswordHash] [varchar](128) NULL,\n\t[PasswordSalt] [varchar](10) NULL,\n\t[rowguid] [uniqueidentifier] NULL,\n\t[ModifiedDate] [datetime] NULL\n)  \nWITH (\n    LOCATION = '/data/advworks/Customers.parquet',\n    DATA_SOURCE = SynapseSqlReadable,  \n    FILE_FORMAT = ParquetFF\n)\nGO\n\n\nCREATE EXTERNAL FILE FORMAT CsvFF\nWITH (\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS (\n        FIELD_TERMINATOR = ','\n        )\n);\n\n\n\n\nCREATE EXTERNAL TABLE [CustomersAggregation]\nWITH (\n    LOCATION = '/reports/customers',\n    DATA_SOURCE = SynapseSqlReadable,\n    FILE_FORMAT = CsvFF\n)\nAS \nSELECT Title, COUNT(1) AS [Count] FROM Customers GROUP BY Title ORDER BY COUNT(1) DESC;\n\n*/\n\n\n\nCREATE VIEW vw_SelectCustmers AS \n SELECT Title, COUNT(1) AS [Count] FROM Customers GROUP BY Title;\n\nCREATE PROCEDURE usp_CustomerAggregation AS\nBEGIN\nDROP EXTERNAL TABLE [CustomersAggregation];\nCREATE EXTERNAL TABLE [CustomersAggregation]\nWITH (\n    LOCATION = '/reports/customers',\n    DATA_SOURCE = SynapseSqlReadable,\n    FILE_FORMAT = CsvFF\n)\nAS \nSELECT Title, COUNT(1) AS [Count] FROM Customers GROUP BY Title ORDER BY COUNT(1) DESC;\nEND\n\nINSERT INTO CustomersAggregation (Title, [Count]) SELECT Title, COUNT(1) AS [Count] FROM Customers GROUP BY Title ORDER BY COUNT(1) DESC;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "AsaSqlAdvWorks",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SelectCustomersFromParquet')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nALTER PROCEDURE usp_SELECT_Customers \nAS BEGIN\nSELECT\n    TOP 100 *\nFROM\n    Customers\nEND\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "AsaSqlAdvWorks",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}